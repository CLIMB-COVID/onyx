# Generated by Django 5.0.3 on 2024-03-21 09:29

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("accounts", "0002_initial"),
        ("testproject", "0002_alter_basetestmodel_collection_month_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name="basetestmodel",
            name="testproject_basetestmodel_is_publ_f136db_cvr",
        ),
        migrations.RemoveConstraint(
            model_name="basetestmodel",
            name="testproject_basetestmodel_is_publ_ad9782_cvr",
        ),
        migrations.RemoveConstraint(
            model_name="testmodelrecord",
            name="testproject_testmodelrecord_test_pa_33f767_cvr",
        ),
        migrations.AddConstraint(
            model_name="basetestmodel",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("is_published", True), _negated=True),
                    ("published_date__isnull", False),
                    _connector="OR",
                ),
                name="testproject_basetestmodel_is_publ_975e9c_cvr",
                violation_error_message="Each of published_date are required in order to set is_published to the value.",
            ),
        ),
        migrations.AddConstraint(
            model_name="basetestmodel",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("is_published", True), _negated=True),
                    ("required_when_published__isnull", False),
                    _connector="OR",
                ),
                name="testproject_basetestmodel_is_publ_16d558_cvr",
                violation_error_message="Each of required_when_published are required in order to set is_published to the value.",
            ),
        ),
        migrations.AddConstraint(
            model_name="testmodelrecord",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("test_pass", True), _negated=True),
                    ("test_result__isnull", False),
                    _connector="OR",
                ),
                name="testproject_testmodelrecord_test_pa_35bc17_cvr",
                violation_error_message="Each of test_result are required in order to set test_pass to the value.",
            ),
        ),
    ]
